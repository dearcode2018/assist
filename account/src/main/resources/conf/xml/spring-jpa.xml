<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"	
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	" default-lazy-init="true">
	
	<!-- dataSource: DruidDataSource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="url" value="${jdbcUrl}" />
	    <property name="username" value="${user}" />
	    <property name="password" value="${password}" />
	    <property name="filters" value="stat" />
	    <property name="maxActive" value="${jdbc.maxActive}" />
	    <property name="initialSize" value="${jdbc.initialSize}" />
	    <property name="maxWait" value="${jdbc.maxWait}" />
	    <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	    <property name="validationQuery" value="SELECT 'x'" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <property name="connectionProperties" value="config.decrypt=true" />
	    <property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- JPA 持久化提供者 -->
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider" />
	
	<!-- 数据库方言配置 -->
<!-- 	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
	</bean> -->
		
	<!-- JPA EntityManager -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/> 		 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.connection.pool.size">${hibernate.connection.pool.size}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">true</prop> 				
				<prop key="jdbc.fetch_size">${jdbc.fetch_size}</prop>
				<prop key="jdbc.batch_size">${jdbc.batch_size}</prop>				
				<prop key="Connection.useUnicode">${Connection.useUnicode}</prop>
				<prop key="connection.characterEncoding">${connection.characterEncoding}</prop>
			</props>
		</property>
		
		<!-- 持久化提供者 -->
		<property name="persistenceProvider" ref="persistenceProvider" />
		<!-- 注解方式: 扫描实体类 -->
		<property name="packagesToScan">
			<!-- 多个要写成 array方式，只有一个可以直接写 value -->
			<array>
				<value>com.hua.entity</value>
			</array>
		</property>			
	</bean>
	
	<!-- 配置 JPA Transaction -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 事务注解一般用在service层，因此service的class不能声明为final -->
	<!-- 配置 Annotation 驱动，定义事务，使用类代理方式(CGLIB) -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- 配置 Spring Data JPA， DAO层，使用此配置可以省略注解， base-package 如果多个，用","分隔 -->
<!--  	<jpa:repositories base-package="com.hua.dao"  transaction-manager-ref="transactionManager"
 		entity-manager-factory-ref="entityManagerFactory"/>	 -->
	
</beans>
